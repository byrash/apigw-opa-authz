service: apigw-opa-authz
frameworkVersion: '2'

provider:
  name: aws
  runtime: go1.x
  lambdaHashingVersion: 20201221

  stage: dev
  region: ap-southeast-2

  # iamRoleStatements:
  #   - Effect: "Allow"
  #     Action:
  #       - "s3:ListBucket"
  #     Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
  #   - Effect: "Allow"
  #     Action:
  #       - "s3:PutObject"
  #     Resource:
  #       Fn::Join:
  #         - ""
  #         - - "arn:aws:s3:::"
  #           - "Ref" : "ServerlessDeploymentBucket"
  #           - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

package:
  patterns:
    - '!./**'
    - ./bin/**

functions:
  authz:
    handler: bin/authz
    events:
      - httpApi:
          path: /authz
          method: get
  service1:
    handler: bin/service1
    events:
      - httpApi:
          path: /service1
          method: get
          authorizer:
            type: request
            name: authz
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
  service2:
    handler: bin/service2
    events:
      - httpApi:
          path: /service2
          method: get
          authorizer:
            type: request
            name: authz
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization